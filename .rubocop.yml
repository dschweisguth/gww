inherit_from: .rubocop_todo.yml

# Customized cops

Style/BarePercentLiterals:
  EnforcedStyle: percent_q

Style/BlockComments:
  Exclude:
    - 'spec/spec_helper.rb'

Style/BlockDelimiters:
  EnforcedStyle: line_count_based

Style/CaseIndentation:
  IndentOneStep: true

Style/DotPosition:
  EnforcedStyle: trailing

Style/EmptyLines:
  Exclude:
    - 'lib/tasks/cucumber.rake'

Style/ExtraSpacing:
  Exclude:
    - 'bin/rails'
    - 'config.ru'
    - 'db/schema.rb'

Style/FormatString:
  EnforcedStyle: percent

Style/HashSyntax:
  Enabled: true
  Exclude:
    - 'db/schema.rb'

Style/IndentationWidth:
  Exclude:
    - 'lib/tasks/cucumber.rake'

Style/MultilineOperationIndentation:
  EnforcedStyle: indented

Style/NumericLiterals:
  MinDigits: 15

Style/PredicateName:
  NamePrefixBlacklist:
    - is_
  Exclude:
    - 'spec/**/*'

# Disabled cops

# These cops want parentheses that really aren't necessary
Lint/AmbiguousOperator:
  Enabled: false
Lint/AmbiguousRegexpLiteral:
  Enabled: false

# This cop gives false positives for Cucumber steps that aren't used.
Lint/Debugger:
  Enabled: false

# What else am I supposed to call the block variable when using find or each_with_object?
Lint/ShadowingOuterLocalVariable:
  Enabled: false

Metrics/AbcSize:
  Enabled: false
Metrics/ClassLength:
  Enabled: false
Metrics/CyclomaticComplexity:
  Enabled: false
Metrics/LineLength:
  Enabled: false
Metrics/MethodLength:
  Enabled: false
Metrics/ModuleLength:
  Enabled: false
Metrics/ParameterLists:
  Enabled: false
Metrics/PerceivedComplexity:
  Enabled: false

Style/AlignHash:
  Enabled: false
Style/AlignParameters:
  Enabled: false
Style/AsciiComments:
  Enabled: false
Style/BracesAroundHashParameters:
  Enabled: false
Style/ClassAndModuleChildren:
  Enabled: false
Style/CommentAnnotation:
  Enabled: false
Style/Documentation:
  Enabled: false
Style/EmptyLinesAroundBlockBody:
  Enabled: false
Style/EmptyLinesAroundClassBody:
  Enabled: false
Style/EmptyLinesAroundMethodBody:
  Enabled: false
Style/EmptyLinesAroundModuleBody:
  Enabled: false
Style/GuardClause:
  Enabled: false
Style/IfUnlessModifier:
  Enabled: false
Style/MultilineTernaryOperator:
  Enabled: false
Style/NegatedIf:
  Enabled: false
Style/Next:
  Enabled: false
Style/RaiseArgs:
  Enabled: false
Style/RedundantBegin:
  Enabled: false
