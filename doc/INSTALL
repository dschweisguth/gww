This document describes how to install GWW on a Mac (for development, using
webrick) or Linux server (for production, using Apache httpd and Phusion
Passenger). It covers only what Dave thinks is not obvious; please fill gaps as
you encounter them.

Install and start mysql
-----------------------

    Mac
	Install mysql 5 with MacPorts per
	    http://2tbsp.com/content/install_and_configure_mysql_5_macports
	Start mysql: sudo /opt/local/share/mysql5/mysql/mysql.server start
	Stop mysql: /opt/local/bin/mysqladmin5 -uroot -p shutdown
    Linux
        TODO

Install ruby and friends
------------------------

GWW currently requires ruby 1.8.something (the current version of 1.9 is too
new), rubygems and the gems listed below. Some of the detail below probably
isn't required, but that's what I have.

Install ruby
    Mac: Use MacPorts.
    Linux: Get source from http://www.ruby-lang.org/en/ and follow instructions
	> ruby --version
	ruby 1.8.7 (2010-01-10 patchlevel 249) [x86_64-linux]

Install gem
    Mac: Use MacPorts.
    Linux: Get source from http://gems.rubyforge.org/ and follow instructions.
	> gem --version
	1.3.6

Install gems

    gem install rails
    gem install mysql
    gem install xml-simple
    > gem list
    actionmailer (2.3.5)
    actionpack (2.3.5)
    activerecord (2.3.5)
    activeresource (2.3.5)
    activesupport (2.3.5)
    fastthread (1.0.7)
    mysql (2.8.1)
    passenger (2.2.11)
    rack (1.0.1)
    rails (2.3.5)
    rake (0.8.7)
    xml-simple (1.0.12)

Install Phusion Passenger (for Linux production)
------------------------------------------------

gem install passenger
passenger-install-apache2-module # and follow instructions
In addition to editing httpd.conf as instructed by passenger, add the following
option to the appropriate place in your httpd configuration to enable GWW's
.htaccess: AllowOverride AuthConfig FileInfo

Get and configure GWW
---------------------

Get the source: Either
    Browse http://github.com/dschweisguth/gww, click "Download Source", pick a
        format, download it and unpack it, or
    git clone git@github.com:dschweisguth/gww.git
Configure:
    Configure database credentials:
	cp config/database{_template,}.yml
	Edit and fill in your database username and password
    Configure Flickr credentials:
	cp config/flickr_credentials{_template,}.yml
	Construct a Flickr API secret, key and auth token manually per the
	    API documentation
	Edit and fill in your secret, api_key and auth_token
For production Linux httpd, configure basic HTTP authentication:
    Create a username and password per
        http://httpd.apache.org/docs/2.2/howto/auth.html
    cp public/.htaccess{_template,}
    Edit and fill in
    - the full path to the htpasswd file that you just created. Note that
      it should not be in or below GWW's public directory.
    - the userid that you want to use for basic HTTP authentication

Create databases
----------------

mysql> grant usage on *.* to gww@localhost identified by '(the password)';
Create dev database:
    mysql> grant all privileges on gww_dev.* to gww@localhost;
    rake db:create
    gzcat gww_production-######-##:##.sql.gz | mysql -ugww -p gww_dev
Create production database:
    mysql> grant all privileges on gww_production.* to gww@localhost;
    rake RAILS_ENV=production db:create
    gzcat gww_production-######-##:##.sql.gz | mysql -ugww -p gww_production
Create test database:
    mysql> grant all privileges on gww_test.* to gww@localhost;
    rake RAILS_ENV=test db:create
    rake db:test:clone_structure

Test GWW
--------

rake test

Start GWW
---------

Development:
    script/server
    Browse localhost:3000
Production (Linux):
    Start or restart httpd
    Browse http://your-production-server/
