This document describes how to install GWW on a Mac (OS 10.6, for development,
using webrick) or Linux server (CentOS 5.4, for production, using Apache httpd
and Phusion Passenger). It doesn't cover some things that Dave thinks are
obvious; please fill gaps as you encounter them.

Install and start mysql
-----------------------

Mac
    If you don't already have it, install MacPorts from www.macports.org
    > sudo port install mysql5-server
    > sudo port load mysql5-server # as directed by the previous command
    > sudo -u _mysql mysql_install_db5
    > /opt/local/lib/mysql5/bin/mysql_secure_installation # as directed
    > ln -s /opt/local/var/run/mysql5/mysqld.sock /tmp/mysql.sock # for ogr2ogr
    Create the following file:
    > cat /opt/local/etc/mysql5/my.cnf 
    [mysqld]
    init-connect='SET NAMES utf8'
    init_connect='SET collation_connection = utf8_unicode_ci'
    default-character-set=utf8 
    default-collation=utf8_unicode_ci

    [clients]
    default-character-set=utf8

    [mysql]
    default-character-set=utf8

Linux
    TODO
    > sudo ln -s /var/lib/mysql/mysql.sock /tmp
    Edit /etc/my.cnf (which on Linux, unlike on Mac OS, will exist on a new
    installation) and add each of the settings above in the appropriate
    section.

Install GDAL 1.8
----------------

Mac
    Get the GDAL 1.8 Complete installer from
	http://www.kyngchaos.com/software/frameworks and run it.

Linux
    > wget http://download.osgeo.org/proj/proj-4.7.0.tar.gz
    > configure
    > make
    > make install
    > wget http://download.osgeo.org/gdal/gdal-1.8.0.tar.gz
    > configure --with-mysql
    > make
    > make install

Install ruby and friends
------------------------

GWW currently requires ruby 1.9.2 and the gems listed below. The specific
versions are not necessarily required, but they're what GWW uses at this
writing.

Mac
    Install rvm for a single user per https://rvm.beginrescueend.com/
    > rvm install 1.9.2
    > rvm use 1.9.2 --default
    Using /Users/dave/.rvm/gems/ruby-1.9.2-p180
    > gem update --system
    > gem install bundler
    > gem list
    bundler (1.0.14)
    rake (0.8.7 ruby) # rvm installed this for us
    rubygems-update (1.8.10)
Linux
    Install the same way as for Mac, but as root, thereby installing rvm
    for all users and setting up the shared rvm's Ruby.

Get and configure GWW
---------------------

Get the source: Either
    > git clone git@github.com:dschweisguth/gww.git, or
    Browse http://github.com/dschweisguth/gww, click "Download Source", pick a
        format, download it and unpack it
Install gems
    Mac
	      > sudo bundle install --without production
    Linux
        > bundle config build.mysql2 --with-mysql-config=/usr/local/mysql/bin/mysql_config
	      > bundle install --deployment --without test
Configure
    Configure database credentials
	      > cp config/database{_template,}.yml
	      Edit, change usernames if you want different ones, and choose passwords
    Configure Flickr credentials
	      > cp config/flickr_credentials{_template,}.yml
	      Construct a Flickr API secret, key, oauth token and oauth token secret manually
	      per the API documentation
	      Edit and fill in your secret, api_key, oauth_token and oauth_token_secret

Create database user and databases
----------------------------------

Create users
    mysql> grant usage on gww_dev.* to gww_dev@localhost identified by 'gww_dev';
    mysql> grant usage on gww_production.* to gww_production@localhost identified by 'gww_production';
    gww_dev will control the development and test environments and
    gww_production will control the production environment. Separating the two
    prevents gww_dev from damaging the production database.
Create dev database
    mysql> grant all privileges on gww_dev.* to gww_dev@localhost;
    > bundle exec rake db:create
    > gzcat gww_production-######-##:##.sql.gz | mysql -ugww -p gww_dev
    > mkdir sfgis
    > cd sfgis
    > wget http://gispub02.sfgov.org/website/sfshare/catalog/stclines.zip http://gispub02.sfgov.org/website/sfshare/catalog/stintersections.zip
    > mkdir stclines stintersections
    > cd stclines
    > unzip ../stclines.zip
    > cd ../stintersections
    > unzip ../stintersections.zip
    > cd ..
    > script/load_sfgis . gww_dev gww_dev gww_dev
Create test database
    mysql> grant all privileges on gww_test.* to gww_dev@localhost;
    > bundle exec rake RAILS_ENV=test db:create
    > bundle exec rake db:test:clone_structure # Note that RAILS_ENV is default, not test
Create production database
    mysql> grant all privileges on gww_production.* to gww_production@localhost;
    Allow gww_dev to browse and mysqldump the production database:
    mysql> grant select, lock tables on gww_production.* to gww_dev@localhost;
    > bundle exec rake RAILS_ENV=production db:create
    > gzcat gww_production-######-##:##.sql.gz | mysql -ugww -p gww_production

Test GWW
--------

> bundle exec rake spec

Install Phusion Passenger and configure httpd (for Linux production only)
-------------------------------------------------------------------------

Install Phusion Passenger
    > bundle exec passenger-install-apache2-module # and follow instructions
    In addition to editing httpd.conf as instructed by passenger, add the
    following option to the appropriate place in your httpd configuration to
    enable GWW's .htaccess: AllowOverride AuthConfig FileInfo

Put the server-up .htaccess in place
    > script/up

Configure basic HTTP authentication
    Create a username and password per
        http://httpd.apache.org/docs/2.2/howto/auth.html. Be sure not to put
	      the htpasswd file in a directory from which httpd serves files, such as
	      GWW's public directory.
    > cp public/admin/.htaccess{_template,}
    Edit and fill in
    - the full path to the htpasswd file that you just created
    - the username

Start GWW
---------

Mac
    > rails s
    Browse http://localhost:3000/
Linux
    > sudo apachectl restart
    Browse http://your-production-server/
